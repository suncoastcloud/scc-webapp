trigger:
  - main

variables:
  location: "southcentralus"
  siteFilesPath: "$(System.DefaultWorkingDirectory)/scc-webapp/sitefiles"

stages:
  - stage: DeployInfrastructure
    jobs:
      - job: Deploy
        pool: msi-pool
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: "scc-mg"
              scriptType: "ps"
              scriptLocation: "inlineScript"
              inlineScript: |
                # Deploy the Bicep template and capture the outputs
                $outputs = az deployment sub create --location "$(location)" --template-file main.bicep --query properties.outputs | ConvertFrom-Json

                # Extract the resource group name, storage account name, and storage container name from the outputs
                $RESOURCE_GROUP_NAME = $outputs.resourceGroupName.value
                $STORAGE_ACCOUNT_NAME = $outputs.storageAccountName.value
                $STORAGE_CONTAINER_NAME = $outputs.storageContainerName.value

                # Set the extracted values as pipeline variables
                Write-Host "##vso[task.setvariable variable=RESOURCE_GROUP_NAME]$RESOURCE_GROUP_NAME"
                Write-Host "##vso[task.setvariable variable=STORAGE_ACCOUNT_NAME]$STORAGE_ACCOUNT_NAME"
                Write-Host "##vso[task.setvariable variable=STORAGE_CONTAINER_NAME]$STORAGE_CONTAINER_NAME"

  - stage: UploadSiteFiles
    dependsOn: DeployInfrastructure
    jobs:
      - job: Upload
        pool: msi-pool
        steps:
          - task: AzureKeyVault@2
            inputs:
              azureSubscription: "scc-mg"
              KeyVaultName: "scc-vault"
              SecretsFilter: "connectionString"
              RunAsPreJob: true

          - task: AzureCLI@2
            inputs:
              azureSubscription: "scc-mg"
              scriptType: "ps"
              scriptLocation: "inlineScript"
              inlineScript: |
                # Retrieve the connection string from the key vault
                $connectionString = "$(connectionString)"

                # Check if the connection string is retrieved
                if (-not $connectionString) {
                  Write-Error "Connection string not found."
                  exit 1
                }

                # Upload files to the storage account using the connection string from the key vault
                az storage blob upload-batch -d $env:STORAGE_CONTAINER_NAME --connection-string $connectionString -s "$(Build.SourcesDirectory)/sitefiles"
