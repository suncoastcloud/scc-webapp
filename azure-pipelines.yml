trigger:
- main

variables:
  location: "southcentralus"
  siteFilesPath: "$(System.DefaultWorkingDirectory)/scc-webapp/sitefiles"

stages:
  - stage: DeployInfrastructure
    jobs:
      - job: Deploy
        pool: msi-pool
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: "scc-mg"
              scriptType: "ps"
              scriptLocation: "inlineScript"
              inlineScript: |
                # Deploy the Bicep template and capture the outputs

                $outputs = az deployment sub create --location "$(location)" --template-file main.bicep --query properties.outputs | ConvertFrom-Json

                # Extract the resource group name, storage account name, and storage container name from the outputs

                $RESOURCE_GROUP_NAME = $outputs.resourceGroupName.value
                $STORAGE_ACCOUNT_NAME = $outputs.storageAccountName.value
                $STORAGE_CONTAINER_NAME = $outputs.storageContainerName.value

                # Set the extracted values as pipeline variables

                Write-Host "##vso[task.setvariable variable=RESOURCE_GROUP_NAME]$RESOURCE_GROUP_NAME"
                Write-Host "##vso[task.setvariable variable=STORAGE_ACCOUNT_NAME]$STORAGE_ACCOUNT_NAME"
                Write-Host "##vso[task.setvariable variable=STORAGE_CONTAINER_NAME]$STORAGE_CONTAINER_NAME"

  - stage: CheckWorkingDirectory
    jobs:
      - job: CheckDirectory
        pool: msi-pool
        steps:
          - script: |
              if [ -z "$(System.DefaultWorkingDirectory)" ]; then
                echo "System.DefaultWorkingDirectory is not set."
                exit 1
              else
                echo "System.DefaultWorkingDirectory is set to $(System.DefaultWorkingDirectory)."
              fi
            displayName: 'Check System.DefaultWorkingDirectory'
      
  - stage: UploadSiteFiles
    dependsOn: DeployInfrastructure
    jobs:
      - job: Upload
        pool: msi-pool
        steps:
          - task: AzureKeyVault@2
            inputs:
              azureSubscription: "scc-mg"
              KeyVaultName: "scc-vault"
              SecretsFilter: "*"
              RunAsPreJob: true

          - task: AzureCLI@2
            inputs:
              azureSubscription: "scc-mg"
              scriptType: 'ps'
              scriptLocation: 'inlineScript'
              inlineScript: |
                $storageAccountKey = $(az keyvault secret show --name "storage-account-key" --vault-name "scc-vault" --query "value" -o tsv)
                az storage blob upload-batch -d $(STORAGE_CONTAINER_NAME) -s $(siteFilesPath) --account-name $(STORAGE_ACCOUNT_NAME) --account-key $storageAccountKey